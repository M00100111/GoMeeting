// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: social.proto

package socialclient

import (
	"context"

	"GoMeeting/rpcs/social/rpc/social"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddFriendReq             = social.AddFriendReq
	AddFriendResp            = social.AddFriendResp
	CreateFriendReq          = social.CreateFriendReq
	CreateFriendResp         = social.CreateFriendResp
	CreateGroupReq           = social.CreateGroupReq
	CreateGroupResp          = social.CreateGroupResp
	DeleteFriendReq          = social.DeleteFriendReq
	DeleteFriendResp         = social.DeleteFriendResp
	DeleteGroupReq           = social.DeleteGroupReq
	DeleteGroupResp          = social.DeleteGroupResp
	Friend                   = social.Friend
	FriendRequest            = social.FriendRequest
	GetFriendListReq         = social.GetFriendListReq
	GetFriendListResp        = social.GetFriendListResp
	GetFriendRequestListReq  = social.GetFriendRequestListReq
	GetFriendRequestListResp = social.GetFriendRequestListResp
	GetGroupListReq          = social.GetGroupListReq
	GetGroupListResp         = social.GetGroupListResp
	GetGroupMemberListReq    = social.GetGroupMemberListReq
	GetGroupMemberListResp   = social.GetGroupMemberListResp
	GetGroupRequestListReq   = social.GetGroupRequestListReq
	GetGroupRequestListResp  = social.GetGroupRequestListResp
	HandleFriendRequestReq   = social.HandleFriendRequestReq
	HandleFriendRequestResp  = social.HandleFriendRequestResp
	HandleGroupRequestReq    = social.HandleGroupRequestReq
	HandleGroupRequestResp   = social.HandleGroupRequestResp
	JoinGroupReq             = social.JoinGroupReq
	JoinGroupResp            = social.JoinGroupResp
	LeaveGroupReq            = social.LeaveGroupReq
	LeaveGroupResp           = social.LeaveGroupResp
	PingReq                  = social.PingReq
	Result                   = social.Result

	Social interface {
		PingSocial(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*Result, error)
		GetFriendList(ctx context.Context, in *GetFriendListReq, opts ...grpc.CallOption) (*GetFriendListResp, error)
		AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*AddFriendResp, error)
		DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error)
		GetFriendRequestList(ctx context.Context, in *GetFriendRequestListReq, opts ...grpc.CallOption) (*GetFriendRequestListResp, error)
		HandleFriendRequest(ctx context.Context, in *HandleFriendRequestReq, opts ...grpc.CallOption) (*HandleFriendRequestResp, error)
		CreateFriend(ctx context.Context, in *CreateFriendReq, opts ...grpc.CallOption) (*CreateFriendResp, error)
		GetGroupList(ctx context.Context, in *GetGroupListReq, opts ...grpc.CallOption) (*GetGroupListResp, error)
		CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error)
		DeleteGroup(ctx context.Context, in *DeleteGroupReq, opts ...grpc.CallOption) (*DeleteGroupResp, error)
		JoinGroup(ctx context.Context, in *JoinGroupReq, opts ...grpc.CallOption) (*JoinGroupResp, error)
		LeaveGroup(ctx context.Context, in *LeaveGroupReq, opts ...grpc.CallOption) (*LeaveGroupResp, error)
		GetGroupMemberList(ctx context.Context, in *GetGroupMemberListReq, opts ...grpc.CallOption) (*GetGroupMemberListResp, error)
		GetGroupRequestList(ctx context.Context, in *GetGroupRequestListReq, opts ...grpc.CallOption) (*GetGroupRequestListResp, error)
		HandleGroupRequest(ctx context.Context, in *HandleGroupRequestReq, opts ...grpc.CallOption) (*HandleGroupRequestResp, error)
	}

	defaultSocial struct {
		cli zrpc.Client
	}
)

func NewSocial(cli zrpc.Client) Social {
	return &defaultSocial{
		cli: cli,
	}
}

func (m *defaultSocial) PingSocial(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*Result, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.PingSocial(ctx, in, opts...)
}

func (m *defaultSocial) GetFriendList(ctx context.Context, in *GetFriendListReq, opts ...grpc.CallOption) (*GetFriendListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GetFriendList(ctx, in, opts...)
}

func (m *defaultSocial) AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*AddFriendResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.AddFriend(ctx, in, opts...)
}

func (m *defaultSocial) DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.DeleteFriend(ctx, in, opts...)
}

func (m *defaultSocial) GetFriendRequestList(ctx context.Context, in *GetFriendRequestListReq, opts ...grpc.CallOption) (*GetFriendRequestListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GetFriendRequestList(ctx, in, opts...)
}

func (m *defaultSocial) HandleFriendRequest(ctx context.Context, in *HandleFriendRequestReq, opts ...grpc.CallOption) (*HandleFriendRequestResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.HandleFriendRequest(ctx, in, opts...)
}

func (m *defaultSocial) CreateFriend(ctx context.Context, in *CreateFriendReq, opts ...grpc.CallOption) (*CreateFriendResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.CreateFriend(ctx, in, opts...)
}

func (m *defaultSocial) GetGroupList(ctx context.Context, in *GetGroupListReq, opts ...grpc.CallOption) (*GetGroupListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GetGroupList(ctx, in, opts...)
}

func (m *defaultSocial) CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.CreateGroup(ctx, in, opts...)
}

func (m *defaultSocial) DeleteGroup(ctx context.Context, in *DeleteGroupReq, opts ...grpc.CallOption) (*DeleteGroupResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.DeleteGroup(ctx, in, opts...)
}

func (m *defaultSocial) JoinGroup(ctx context.Context, in *JoinGroupReq, opts ...grpc.CallOption) (*JoinGroupResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.JoinGroup(ctx, in, opts...)
}

func (m *defaultSocial) LeaveGroup(ctx context.Context, in *LeaveGroupReq, opts ...grpc.CallOption) (*LeaveGroupResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.LeaveGroup(ctx, in, opts...)
}

func (m *defaultSocial) GetGroupMemberList(ctx context.Context, in *GetGroupMemberListReq, opts ...grpc.CallOption) (*GetGroupMemberListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GetGroupMemberList(ctx, in, opts...)
}

func (m *defaultSocial) GetGroupRequestList(ctx context.Context, in *GetGroupRequestListReq, opts ...grpc.CallOption) (*GetGroupRequestListResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.GetGroupRequestList(ctx, in, opts...)
}

func (m *defaultSocial) HandleGroupRequest(ctx context.Context, in *HandleGroupRequestReq, opts ...grpc.CallOption) (*HandleGroupRequestResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.HandleGroupRequest(ctx, in, opts...)
}
