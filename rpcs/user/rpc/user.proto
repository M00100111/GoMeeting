syntax = "proto3";  //指定协议版本
package user; //默认包名,用于proto文件
option go_package = "./user"; //默认包名,用于生成的代码

//定义服务名
service User{
  //定义功能及请求与响应结构体
  rpc Ping(PingReq) returns (PingResp);
  rpc SignUp(SignUpReq) returns (SignUpResp);
  rpc Login(LoginReq) returns (LoginResp);
  rpc GetIndexByUserId(GetIndexByUserIdReq) returns (GetIndexByUserIdResp);
  rpc GetUserInfoByUserId(GetUserInfoByUserIdReq) returns (GetUserInfoByUserIdResp);
}

message PingReq{
  string msg = 1;
}
message PingResp{
  int32 code = 1;
  string msg = 2;
}

message SignUpReq{
  string email = 1;
  string username = 2;
  string password = 3;
  string captcha = 4; // 验证码
  int32 sex = 5;
  string avatar = 6;
}
message SignUpResp{
  int32 code = 1;
  string msg = 2;

  uint64 id = 3;
  uint64 meetingId = 4;
}

//登录功能请求与响应结构体
message LoginReq{
  string email = 1;
  string captcha = 2;
  string password = 3;
}
message LoginResp{
  int32 code = 1;
  string msg = 2;

  string token = 3;
  int64 expire = 4;
  string userId = 5;
}

message GetIndexByUserIdReq{
  uint64 userId = 1;
}
message GetIndexByUserIdResp{
  int32 code = 1;
  string msg = 2;

  uint64 index = 3;
}

message UserInfo{
  uint64 index = 1;
  uint64 userId = 2;
  string email = 3;
  string username = 4;
  uint64 sex = 5;
  uint64 status = 6;
}
message GetUserInfoByUserIdReq{
  uint64 userId = 1;
}
message GetUserInfoByUserIdResp{
  int32 code = 1;
  string msg = 2;
  UserInfo userInfo = 3;
}