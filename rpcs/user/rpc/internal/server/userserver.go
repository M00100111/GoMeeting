// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: user.proto

package server

import (
	"context"

	"GoMeeting/rpcs/user/rpc/internal/logic"
	"GoMeeting/rpcs/user/rpc/internal/svc"
	"GoMeeting/rpcs/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

// 定义功能及请求与响应结构体
func (s *UserServer) Ping(ctx context.Context, in *user.PingReq) (*user.PingResp, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *UserServer) SignUp(ctx context.Context, in *user.SignUpReq) (*user.SignUpResp, error) {
	l := logic.NewSignUpLogic(ctx, s.svcCtx)
	return l.SignUp(in)
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}
