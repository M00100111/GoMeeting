// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	meeting "GoMeeting/api/internal/handler/meeting"
	tool "GoMeeting/api/internal/handler/tool"
	user "GoMeeting/api/internal/handler/user"
	"GoMeeting/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/pingmeeting",
				Handler: meeting.PingMeetingHandler(serverCtx),
			},
		},
		rest.WithPrefix("/meeting"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtAuth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/endmeeting",
					Handler: meeting.EndMeetingHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/startmeeting",
					Handler: meeting.StartMeetingHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/meeting"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 申请生成验证码发送到邮箱并存入Redis
				Method:  http.MethodGet,
				Path:    "/captcha",
				Handler: tool.GenerateCaptchaHandler(serverCtx),
			},
		},
		rest.WithPrefix("/tool"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 用户登录
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/pinguser",
				Handler: user.PinguserHandler(serverCtx),
			},
			{
				// 用户注册
				Method:  http.MethodPost,
				Path:    "/signup",
				Handler: user.SignupHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)
}
